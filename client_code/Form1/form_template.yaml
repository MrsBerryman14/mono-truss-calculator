components: []
container:
  properties:
    html: |-
      <center style="font-style:italic; color:#888; margin: 3em;">
       from flask import Flask, render_template, request, jsonify

      app = Flask(__MonoTrussCalc__)

      @app.route('/')
      def index():
          return '''
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Mono Truss Calculator</title>
              <style>
                  body {
                      font-family: Arial, sans-serif;
                      margin: 0;
                      padding: 0;
                      display: flex;
                      flex-direction: column;
                      align-items: center;
                      background-color: #3d1898;
                      color: black;
                  }

                  header {
                      background-color: #d1d5d5;
                      color: black;
                      padding: 1em;
                      width: 100%;
                      text-align: center;
                  }

                  main {
                      display: flex;
                      flex-direction: row;
                      gap: 20px;
                      margin: 20px;
                      width: 90%;
                      max-width: 1200px;
                  }

                  section {
                      background: d1d5d5;
                      color: black;
                      border: 1px solid black;
                      border-radius: 8px;
                      padding: 20px;
                      flex: 1;
                      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
                  }

                  h2 {
                      margin-top: 0;
                      color: black;
                  }

                  h3 {
                      color: black;
                  }

                  table {
                      width: 100%;
                      border-collapse: collapse;
                      margin-top: 10px;
                  }

                  th, td {
                      border: 1px solid #ddd;
                      padding: 8px;
                      text-align: center;
                  }

                  th {
                      background-color: #d1d5d5;
                      color: black;
                  }

                  canvas {
                      border: 1px solid black;
                      width: 100%;
                      height: 400px;
                  }

                  .button-group {
                      margin-top: 10px;
                      display: flex;
                      gap: 10px;
                  }

                  button {
                      padding: 10px;
                      border: none;
                      border-radius: 5px;
                      cursor: pointer;
                  }

                  button.calculate {
                      background-color: #d1d5d5;
                      color: black;
                  }

                  button.reset {
                      background-color: #d1d5d5;
                      color: white;
                  }
              </style>
          </head>
          <body>
              <header>
                  <h1>Mono Truss Calculator</h1>
              </header>

              <main>
                  <!-- Input Section -->
                  <section>
                      <h2>Inputs</h2>
                      <form id="truss-form">
                          <h3>Nodes</h3>
                          <table id="nodes-table">
                              <tr>
                                  <th>Node</th>
                                  <th>x-Coordinate</th>
                                  <th>y-Coordinate</th>
                              </tr>
                              <tr>
                                  <td>A</td>
                                  <td><input type="number" name="nodes[A][x]" value="0"></td>
                                  <td><input type="number" name="nodes[A][y]" value="0"></td>
                              </tr>
                              <tr>
                                  <td>B</td>
                                  <td><input type="number" name="nodes[B][x]" value="5"></td>
                                  <td><input type="number" name="nodes[B][y]" value="0"></td>
                              </tr>
                              <tr>
                                  <td>C</td>
                                  <td><input type="number" name="nodes[C][x]" value="2.5"></td>
                                  <td><input type="number" name="nodes[C][y]" value="5"></td>
                              </tr>
                          </table>

                          <h3>Members</h3>
                          <table id="members-table">
                              <tr>
                                  <th>Member</th>
                                  <th>Start Node</th>
                                  <th>End Node</th>
                              </tr>
                              <tr>
                                  <td>AC</td>
                                  <td><input type="text" name="members[AC][start]" value="A"></td>
                                  <td><input type="text" name="members[AC][end]" value="C"></td>
                              </tr>
                              <tr>
                                  <td>BC</td>
                                  <td><input type="text" name="members[BC][start]" value="B"></td>
                                  <td><input type="text" name="members[BC][end]" value="C"></td>
                              </tr>
                              <tr>
                                  <td>AB</td>
                                  <td><input type="text" name="members[AB][start]" value="A"></td>
                                  <td><input type="text" name="members[AB][end]" value="B"></td>
                              </tr>
                          </table>

                          <h3>Loads</h3>
                          <table id="loads-table">
                              <tr>
                                  <th>Node</th>
                                  <th>Force (Fx)</th>
                                  <th>Force (Fy)</th>
                              </tr>
                              <tr>
                                  <td>C</td>
                                  <td><input type="number" name="loads[C][Fx]" value="0"></td>
                                  <td><input type="number" name="loads[C][Fy]" value="-100"></td>
                              </tr>
                          </table>

                          <div class="button-group">
                              <button type="submit" class="calculate">Calculate</button>
                              <button type="reset" class="reset">Reset</button>
                          </div>
                      </form>
                  </section>

                  <!-- Results Section -->
                  <section>
                      <h2>Results</h2>
                      <h3>Reactions</h3>
                      <table id="reactions-table">
                          <tr>
                              <th>Node</th>
                              <th>Reaction Force (Fx)</th>
                              <th>Reaction Force (Fy)</th>
                          </tr>
                      </table>

                      <h3>Member Forces</h3>
                      <table id="member-forces-table">
                          <tr>
                              <th>Member</th>
                              <th>Force</th>
                              <th>Type</th>
                          </tr>
                      </table>
                  </section>
              </main>

              <script>
                  document.getElementById('truss-form').addEventListener('submit', async (event) => {
                      event.preventDefault();

                      const formData = new FormData(event.target);
                      const data = Object.fromEntries(formData.entries());

                      const response = await fetch('/calculate', {
                          method: 'POST',
                          headers: { 'Content-Type': 'application/json' },
                          body: JSON.stringify(data)
                      });

                      const results = await response.json();
                      console.log(results);
                      // Populate results tables with data
                  });
              </script>
          </body>
          </html>
          '''

      @app.route('/calculate', methods=['POST'])
      def calculate():
          data = request.json
          # Add truss calculation logic here

          # Mock result
          results = {
              "reactions": [
                  {"node": "A", "Fx": 0, "Fy": 50},
                  {"node": "B", "Fx": 0, "Fy": 50}
              ],
              "member_forces": [
                  {"member": "AC", "force": 75, "type": "Tension"},
                  {"member": "BC", "force": 75, "type": "Compression"},
                  {"member": "AB", "force": 50, "type": "Tension"}
              ]
          }

          return jsonify(results)

      if __name__ == '__main__':
          app.run(debug=True)

      </center>
      <div anvil-slot="default"></div>
  type: HtmlTemplate
custom_component: false
is_package: true
slots: {}
